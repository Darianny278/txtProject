{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  data() {\n    return {\n      empleados: []\n    };\n  },\n  mounted() {\n    this.cargarEmpleadosDesdeArchivo();\n  },\n  methods: {\n    async cargarEmpleadosDesdeArchivo() {\n      try {\n        const response = await fetch('empleados.txt');\n        if (!response.ok) {\n          throw new Error('No se pudo cargar el archivo.');\n        }\n        const contenidoTexto = await response.text();\n        const lineas = contenidoTexto.split('\\n');\n        const empleados = [];\n        lineas.forEach(linea => {\n          const campos = linea.split(',');\n          if (campos.length === 6) {\n            const [dniBeneficiario, numeroCuenta, tipoCuenta, numeroRuta, montoTotal] = campos;\n            empleados.push({\n              dniBeneficiario,\n              numeroCuenta,\n              tipoCuenta,\n              numeroRuta,\n              montoTotal\n            });\n          }\n        });\n        this.empleados = empleados;\n      } catch (error) {\n        console.error('Error al cargar los datos:', error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["data","empleados","mounted","cargarEmpleadosDesdeArchivo","methods","response","fetch","ok","Error","contenidoTexto","text","lineas","split","forEach","linea","campos","length","dniBeneficiario","numeroCuenta","tipoCuenta","numeroRuta","montoTotal","push","error","console"],"sources":["src/components/Banco.vue"],"sourcesContent":["<template>\n  <div>\n    <h1>Tabla de Empleados</h1>\n    <table>\n      <thead>\n      <tr>\n        <th>DNI Beneficiario</th>\n        <th>Banco</th>\n        <th>Número de Cuenta</th>\n        <th>Tipo de Cuenta</th>\n        <th>Número de Ruta</th>\n        <th>Monto Total</th>\n      </tr>\n      </thead>\n      <tbody>\n      <tr v-for=\"(empleado, index) in empleados\" :key=\"index\">\n        <td>{{ empleado.dniBeneficiario }}</td>\n        <td>{{ empleado.banco }}</td>\n        <td>{{ empleado.numeroCuenta }}</td>\n        <td>{{ empleado.tipoCuenta }}</td>\n        <td>{{ empleado.numeroRuta }}</td>\n        <td>{{ empleado.montoTotal }}</td>\n      </tr>\n      </tbody>\n    </table>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      empleados: [],\n    };\n  },\n  mounted() {\n    this.cargarEmpleadosDesdeArchivo();\n  },\n  methods: {\n    async cargarEmpleadosDesdeArchivo() {\n      try {\n        const response = await fetch('empleados.txt');\n\n        if (!response.ok) {\n          throw new Error('No se pudo cargar el archivo.');\n        }\n\n        const contenidoTexto = await response.text();\n\n        const lineas = contenidoTexto.split('\\n');\n        const empleados = [];\n\n        lineas.forEach((linea) => {\n          const campos = linea.split(',');\n          if (campos.length === 6) {\n            const [dniBeneficiario, numeroCuenta, tipoCuenta, numeroRuta, montoTotal] = campos;\n            empleados.push({\n              dniBeneficiario,\n              numeroCuenta,\n              tipoCuenta,\n              numeroRuta,\n              montoTotal,\n            });\n          }\n        });\n\n        this.empleados = empleados;\n      } catch (error) {\n        console.error('Error al cargar los datos:', error);\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\n/* Estilos CSS específicos para este componente */\n</style>\n"],"mappings":";AA6BA;EACAA,KAAA;IACA;MACAC,SAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,2BAAA;EACA;EACAC,OAAA;IACA,MAAAD,4BAAA;MACA;QACA,MAAAE,QAAA,SAAAC,KAAA;QAEA,KAAAD,QAAA,CAAAE,EAAA;UACA,UAAAC,KAAA;QACA;QAEA,MAAAC,cAAA,SAAAJ,QAAA,CAAAK,IAAA;QAEA,MAAAC,MAAA,GAAAF,cAAA,CAAAG,KAAA;QACA,MAAAX,SAAA;QAEAU,MAAA,CAAAE,OAAA,CAAAC,KAAA;UACA,MAAAC,MAAA,GAAAD,KAAA,CAAAF,KAAA;UACA,IAAAG,MAAA,CAAAC,MAAA;YACA,OAAAC,eAAA,EAAAC,YAAA,EAAAC,UAAA,EAAAC,UAAA,EAAAC,UAAA,IAAAN,MAAA;YACAd,SAAA,CAAAqB,IAAA;cACAL,eAAA;cACAC,YAAA;cACAC,UAAA;cACAC,UAAA;cACAC;YACA;UACA;QACA;QAEA,KAAApB,SAAA,GAAAA,SAAA;MACA,SAAAsB,KAAA;QACAC,OAAA,CAAAD,KAAA,+BAAAA,KAAA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}