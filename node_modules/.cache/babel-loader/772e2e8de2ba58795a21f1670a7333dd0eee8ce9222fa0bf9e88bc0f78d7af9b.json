{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  data() {\n    return {\n      empleados: []\n    };\n  },\n  methods: {\n    cargarArchivo(event) {\n      const archivo = event.target.files[0];\n      if (archivo) {\n        const lector = new FileReader();\n        lector.onload = e => {\n          const contenido = e.target.result;\n          this.procesarContenido(contenido);\n        };\n        lector.readAsText(archivo);\n      } else {\n        this.empleados = [];\n      }\n    },\n    procesarContenido(contenido) {\n      const lineas = contenido.split('\\n');\n      const empleados = [];\n      lineas.forEach((linea, index) => {\n        if (index === 0) {\n          return;\n        }\n        const campos = linea.split(',');\n        if (campos.length === 5) {\n          const [dniBeneficiario, numeroCuenta, tipoCuenta, numeroRuta, montoTotal] = campos;\n          empleados.push({\n            dniBeneficiario,\n            numeroCuenta,\n            tipoCuenta,\n            numeroRuta,\n            montoTotal\n          });\n        }\n      });\n      this.empleados = empleados;\n    }\n  }\n};","map":{"version":3,"names":["data","empleados","methods","cargarArchivo","event","archivo","target","files","lector","FileReader","onload","e","contenido","result","procesarContenido","readAsText","lineas","split","forEach","linea","index","campos","length","dniBeneficiario","numeroCuenta","tipoCuenta","numeroRuta","montoTotal","push"],"sources":["src/views/BancoView.vue"],"sourcesContent":["<template>\n  <div>\n    <h1>Tabla de Empleados desde Archivo</h1>\n    <input type=\"file\" @change=\"cargarArchivo\" accept=\".txt\" />\n    <table v-if=\"empleados.length > 0\">\n      <thead>\n      <tr>\n        <th>DNI Beneficiario</th>\n        <th>Número de Cuenta</th>\n        <th>Tipo de Cuenta</th>\n        <th>Número de Ruta</th>\n        <th>Monto Total</th>\n      </tr>\n      </thead>\n      <tbody>\n      <tr v-for=\"(empleado, index) in empleados\" :key=\"index\">\n        <td>{{ empleado.dniBeneficiario }}</td>\n        <td>{{ empleado.numeroCuenta }}</td>\n        <td>{{ empleado.tipoCuenta }}</td>\n        <td>{{ empleado.numeroRuta }}</td>\n        <td>{{ empleado.montoTotal }}</td>\n      </tr>\n      </tbody>\n    </table>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      empleados: [],\n    };\n  },\n  methods: {\n    cargarArchivo(event) {\n      const archivo = event.target.files[0];\n\n      if (archivo) {\n        const lector = new FileReader();\n\n        lector.onload = (e) => {\n          const contenido = e.target.result;\n          this.procesarContenido(contenido);\n        };\n\n        lector.readAsText(archivo);\n      } else {\n        this.empleados = [];\n      }\n    },\n    procesarContenido(contenido) {\n      const lineas = contenido.split('\\n');\n      const empleados = [];\n\n      lineas.forEach((linea, index) => {\n        if (index === 0) {\n          return;\n        }\n\n        const campos = linea.split(',');\n        if (campos.length === 5) {\n          const [dniBeneficiario, numeroCuenta, tipoCuenta, numeroRuta, montoTotal] = campos;\n          empleados.push({\n            dniBeneficiario,\n            numeroCuenta,\n            tipoCuenta,\n            numeroRuta,\n            montoTotal,\n          });\n        }\n      });\n\n      this.empleados = empleados;\n    },\n  },\n};\n</script>\n\n<style scoped>\n.tabla-empleados {\n  width: 100%;\n  border-collapse: collapse;\n  margin-top: 20px;\n}\n\n.tabla-empleados th, .tabla-empleados td {\n  border: 1px solid #ddd;\n  padding: 8px;\n  text-align: left;\n}\n\n.tabla-empleados th {\n  background-color: #f2f2f2;\n}\n\n.tabla-empleados tr:nth-child(even) {\n  background-color: #f2f2f2;\n}\n\n.tabla-empleados tr:hover {\n  background-color: #ddd;\n}\n</style>"],"mappings":";AA4BA;EACAA,KAAA;IACA;MACAC,SAAA;IACA;EACA;EACAC,OAAA;IACAC,cAAAC,KAAA;MACA,MAAAC,OAAA,GAAAD,KAAA,CAAAE,MAAA,CAAAC,KAAA;MAEA,IAAAF,OAAA;QACA,MAAAG,MAAA,OAAAC,UAAA;QAEAD,MAAA,CAAAE,MAAA,GAAAC,CAAA;UACA,MAAAC,SAAA,GAAAD,CAAA,CAAAL,MAAA,CAAAO,MAAA;UACA,KAAAC,iBAAA,CAAAF,SAAA;QACA;QAEAJ,MAAA,CAAAO,UAAA,CAAAV,OAAA;MACA;QACA,KAAAJ,SAAA;MACA;IACA;IACAa,kBAAAF,SAAA;MACA,MAAAI,MAAA,GAAAJ,SAAA,CAAAK,KAAA;MACA,MAAAhB,SAAA;MAEAe,MAAA,CAAAE,OAAA,EAAAC,KAAA,EAAAC,KAAA;QACA,IAAAA,KAAA;UACA;QACA;QAEA,MAAAC,MAAA,GAAAF,KAAA,CAAAF,KAAA;QACA,IAAAI,MAAA,CAAAC,MAAA;UACA,OAAAC,eAAA,EAAAC,YAAA,EAAAC,UAAA,EAAAC,UAAA,EAAAC,UAAA,IAAAN,MAAA;UACApB,SAAA,CAAA2B,IAAA;YACAL,eAAA;YACAC,YAAA;YACAC,UAAA;YACAC,UAAA;YACAC;UACA;QACA;MACA;MAEA,KAAA1B,SAAA,GAAAA,SAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}