{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\nexport default {\n  data() {\n    return {\n      detalle: {\n        dniBeneficiario: '',\n        numeroCuenta: 0,\n        tipoCuenta: '',\n        numeroRuta: 0,\n        montoTotal: 0\n      },\n      empleados: []\n    };\n  },\n  methods: {\n    agregarEmpleado() {\n      this.empleados.push({\n        ...this.detalle\n      });\n      this.detalle = {\n        dniBeneficiario: '',\n        numeroCuenta: 0,\n        tipoCuenta: '',\n        numeroRuta: 0,\n        montoTotal: 0\n      };\n    },\n    eliminarEmpleado(index) {\n      this.empleados.splice(index, 1);\n    },\n    generarArchivoTexto() {\n      if (this.empleados.length === 0) {\n        alert('No hay empleados para generar el archivo.');\n        return;\n      }\n      let contenidoArchivo = 'DNI Beneficiario,Número de Cuenta,Tipo de Cuenta,Número de Ruta,Monto Total\\n';\n      this.empleados.forEach(empleado => {\n        contenidoArchivo += `${empleado.dniBeneficiario},${empleado.numeroCuenta},${empleado.tipoCuenta},${empleado.numeroRuta},${empleado.montoTotal}\\n`;\n      });\n      const blob = new Blob([contenidoArchivo], {\n        type: 'text/plain'\n      });\n      const url = window.URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = 'empleados.txt';\n      a.click();\n      window.URL.revokeObjectURL(url);\n    }\n  }\n};","map":{"version":3,"names":["data","detalle","dniBeneficiario","numeroCuenta","tipoCuenta","numeroRuta","montoTotal","empleados","methods","agregarEmpleado","push","eliminarEmpleado","index","splice","generarArchivoTexto","length","alert","contenidoArchivo","forEach","empleado","blob","Blob","type","url","window","URL","createObjectURL","a","document","createElement","href","download","click","revokeObjectURL"],"sources":["src/components/HelloWorld.vue"],"sourcesContent":["<template>\n  <div>\n    <form class=\"formulario\" @submit.prevent=\"agregarEmpleado\">\n      <h2>Detalle</h2>\n      <div class=\"campo\">\n        <label for=\"dniBeneficiario\">Cedula:</label>\n        <input id=\"dniBeneficiario\" v-model=\"detalle.dniBeneficiario\" type=\"text\" />\n      </div>\n      <div class=\"campo\">\n        <label for=\"numeroCuenta\">Número Cuenta:</label>\n        <input id=\"numeroCuenta\" v-model=\"detalle.numeroCuenta\" type=\"number\" />\n      </div>\n      <div class=\"campo\">\n        <label for=\"tipoCuenta\">Tipo de Cuenta:</label>\n        <input id=\"tipoCuenta\" v-model=\"detalle.tipoCuenta\" type=\"text\" />\n      </div>\n      <div class=\"campo\">\n        <label for=\"numeroRuta\">Número de Ruta:</label>\n        <input id=\"numeroRuta\" v-model=\"detalle.numeroRuta\" type=\"number\" />\n      </div>\n      <div class=\"campo\">\n        <label for=\"montoTotal\">Monto Total:</label>\n        <input id=\"montoTotal\" v-model=\"detalle.montoTotal\" type=\"number\" />\n      </div>\n\n      <button type=\"submit\">Agregar Empleado</button>\n    </form>\n\n    <h2>Empleados</h2>\n    <table class=\"tabla-empleados\">\n      <thead>\n      <tr>\n        <th>DNI Beneficiario</th>\n        <th>Número de Cuenta</th>\n        <th>Tipo de cuenta</th>\n        <th>Total</th>\n        <th>Acciones</th>\n      </tr>\n      </thead>\n      <tbody>\n      <tr v-for=\"(empleado, index) in empleados\" :key=\"index\">\n        <td>{{ empleado.dniBeneficiario }}</td>\n        <td>{{ empleado.numeroCuenta }}</td>\n        <td>{{ empleado.tipoCuenta }}</td>\n        <td>{{ empleado.total }}</td>\n        <td>\n          <button @click=\"eliminarEmpleado(index)\">Eliminar</button>\n        </td>\n      </tr>\n      </tbody>\n    </table>\n\n    <button @click=\"generarArchivoTexto\">Generar Archivo de Texto</button>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      detalle: {\n        dniBeneficiario: '',\n        numeroCuenta: 0,\n        tipoCuenta: '',\n        numeroRuta: 0,\n        montoTotal: 0,\n      },\n      empleados: [],\n    }\n  },\n  methods: {\n    agregarEmpleado() {\n      this.empleados.push({ ...this.detalle })\n\n      this.detalle = {\n        dniBeneficiario: '',\n        numeroCuenta: 0,\n        tipoCuenta: '',\n        numeroRuta: 0,\n        montoTotal: 0,\n      }\n    },\n\n    eliminarEmpleado(index) {\n      this.empleados.splice(index, 1);\n    },\n\n    generarArchivoTexto() {\n      if (this.empleados.length === 0) {\n        alert('No hay empleados para generar el archivo.');\n        return;\n      }\n\n      let contenidoArchivo = 'DNI Beneficiario,Número de Cuenta,Tipo de Cuenta,Número de Ruta,Monto Total\\n';\n\n      this.empleados.forEach((empleado) => {\n        contenidoArchivo += `${empleado.dniBeneficiario},${empleado.numeroCuenta},${empleado.tipoCuenta},${empleado.numeroRuta},${empleado.montoTotal}\\n`;\n      });\n\n      const blob = new Blob([contenidoArchivo], { type: 'text/plain' });\n\n      const url = window.URL.createObjectURL(blob);\n\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = 'empleados.txt';\n      a.click();\n\n      window.URL.revokeObjectURL(url);\n    },\n  },\n}\n</script>\n\n<style>\n.formulario {\n  width: 400px;\n  margin: 0 auto;\n  padding: 20px;\n  border: 1px solid #ccc;\n  border-radius: 5px;\n  background-color: #f9f9f9;\n}\n\n.campo {\n  margin-bottom: 10px;\n}\n\n.campo input {\n  margin-left: 10px;\n}\n\nbutton[type=\"submit\"] {\n  background-color: #007bff;\n  color: #fff;\n  border: none;\n  padding: 10px 20px;\n  cursor: pointer;\n}\n\n.lista-empleados {\n  list-style: none;\n  padding: 0;\n}\n\n.lista-empleados li {\n  margin-bottom: 5px;\n}\n\n.tabla-empleados {\n  width: 100%;\n  border-collapse: collapse;\n  margin-top: 20px;\n}\n\n.tabla-empleados th,\n.tabla-empleados td {\n  border: 1px solid #ddd;\n  padding: 8px;\n  text-align: left;\n}\n\n.tabla-empleados th {\n  background-color: #f2f2f2;\n}\n\n.tabla-empleados tr:hover {\n  background-color: #f5f5f5;\n}\n\nbutton[type=\"button\"] {\n  background-color: #dc3545;\n  color: #fff;\n  border: none;\n  padding: 5px 10px;\n  cursor: pointer;\n}\n</style>"],"mappings":";;;;AAyDA;EACAA,KAAA;IACA;MACAC,OAAA;QACAC,eAAA;QACAC,YAAA;QACAC,UAAA;QACAC,UAAA;QACAC,UAAA;MACA;MACAC,SAAA;IACA;EACA;EACAC,OAAA;IACAC,gBAAA;MACA,KAAAF,SAAA,CAAAG,IAAA;QAAA,QAAAT;MAAA;MAEA,KAAAA,OAAA;QACAC,eAAA;QACAC,YAAA;QACAC,UAAA;QACAC,UAAA;QACAC,UAAA;MACA;IACA;IAEAK,iBAAAC,KAAA;MACA,KAAAL,SAAA,CAAAM,MAAA,CAAAD,KAAA;IACA;IAEAE,oBAAA;MACA,SAAAP,SAAA,CAAAQ,MAAA;QACAC,KAAA;QACA;MACA;MAEA,IAAAC,gBAAA;MAEA,KAAAV,SAAA,CAAAW,OAAA,CAAAC,QAAA;QACAF,gBAAA,OAAAE,QAAA,CAAAjB,eAAA,IAAAiB,QAAA,CAAAhB,YAAA,IAAAgB,QAAA,CAAAf,UAAA,IAAAe,QAAA,CAAAd,UAAA,IAAAc,QAAA,CAAAb,UAAA;MACA;MAEA,MAAAc,IAAA,OAAAC,IAAA,EAAAJ,gBAAA;QAAAK,IAAA;MAAA;MAEA,MAAAC,GAAA,GAAAC,MAAA,CAAAC,GAAA,CAAAC,eAAA,CAAAN,IAAA;MAEA,MAAAO,CAAA,GAAAC,QAAA,CAAAC,aAAA;MACAF,CAAA,CAAAG,IAAA,GAAAP,GAAA;MACAI,CAAA,CAAAI,QAAA;MACAJ,CAAA,CAAAK,KAAA;MAEAR,MAAA,CAAAC,GAAA,CAAAQ,eAAA,CAAAV,GAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}